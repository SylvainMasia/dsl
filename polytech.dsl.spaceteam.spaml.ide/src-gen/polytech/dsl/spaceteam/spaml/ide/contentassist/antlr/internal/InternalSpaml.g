/*
 * generated by Xtext 2.14.0
 */
grammar InternalSpaml;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package polytech.dsl.spaceteam.spaml.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package polytech.dsl.spaceteam.spaml.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import polytech.dsl.spaceteam.spaml.services.SpamlGrammarAccess;

}
@parser::members {
	private SpamlGrammarAccess grammarAccess;

	public void setGrammarAccess(SpamlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePluggedElement
entryRulePluggedElement
:
{ before(grammarAccess.getPluggedElementRule()); }
	 rulePluggedElement
{ after(grammarAccess.getPluggedElementRule()); } 
	 EOF 
;

// Rule PluggedElement
rulePluggedElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPluggedElementAccess().getGroup()); }
		(rule__PluggedElement__Group__0)
		{ after(grammarAccess.getPluggedElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getGroup()); }
		(rule__Sensor__Group__0)
		{ after(grammarAccess.getSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActuator
entryRuleActuator
:
{ before(grammarAccess.getActuatorRule()); }
	 ruleActuator
{ after(grammarAccess.getActuatorRule()); } 
	 EOF 
;

// Rule Actuator
ruleActuator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActuatorAccess().getGroup()); }
		(rule__Actuator__Group__0)
		{ after(grammarAccess.getActuatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getGroup()); }
		(rule__Action__Group__0)
		{ after(grammarAccess.getActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransition
entryRuleTransition
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransitionAccess().getGroup()); }
		(rule__Transition__Group__0)
		{ after(grammarAccess.getTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule SIGNAL
ruleSIGNAL
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIGNALAccess().getAlternatives()); }
		(rule__SIGNAL__Alternatives)
		{ after(grammarAccess.getSIGNALAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getPluggedElementsKeyword_5_0()); }
		'pluggedElements'
		{ after(grammarAccess.getProgramAccess().getPluggedElementsKeyword_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getPluggedElementsKeyword_5_1()); }
		'pluggedElements:'
		{ after(grammarAccess.getProgramAccess().getPluggedElementsKeyword_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Alternatives_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getStatesKeyword_8_0()); }
		'states'
		{ after(grammarAccess.getProgramAccess().getStatesKeyword_8_0()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getStatesKeyword_8_1()); }
		'states:'
		{ after(grammarAccess.getProgramAccess().getStatesKeyword_8_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluggedElement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPluggedElementAccess().getActuatorParserRuleCall_0_0()); }
		ruleActuator
		{ after(grammarAccess.getPluggedElementAccess().getActuatorParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPluggedElementAccess().getSensorParserRuleCall_0_1()); }
		ruleSensor
		{ after(grammarAccess.getPluggedElementAccess().getSensorParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getEqualsSignKeyword_1_0()); }
		'='
		{ after(grammarAccess.getActionAccess().getEqualsSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getSetToKeyword_1_1()); }
		'setTo'
		{ after(grammarAccess.getActionAccess().getSetToKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getEqualsSignKeyword_2_0()); }
		'='
		{ after(grammarAccess.getTransitionAccess().getEqualsSignKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionAccess().getIsKeyword_2_1()); }
		'is'
		{ after(grammarAccess.getTransitionAccess().getIsKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4_0()); }
		'->'
		{ after(grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getTransitionAccess().getThenKeyword_4_1()); }
		'then'
		{ after(grammarAccess.getTransitionAccess().getThenKeyword_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIGNAL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIGNALAccess().getLOWEnumLiteralDeclaration_0()); }
		('LOW')
		{ after(grammarAccess.getSIGNALAccess().getLOWEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getSIGNALAccess().getHIGHEnumLiteralDeclaration_1()); }
		('HIGH')
		{ after(grammarAccess.getSIGNALAccess().getHIGHEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramKeyword_0()); }
	'Program'
	{ after(grammarAccess.getProgramAccess().getProgramKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_1()); }
	(rule__Program__NameAssignment_1)
	{ after(grammarAccess.getProgramAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getInitialStateKeyword_2()); }
	'initialState'
	{ after(grammarAccess.getProgramAccess().getInitialStateKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getInitialStateAssignment_3()); }
	(rule__Program__InitialStateAssignment_3)
	{ after(grammarAccess.getProgramAccess().getInitialStateAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__5__Impl
	rule__Program__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getAlternatives_5()); }
	(rule__Program__Alternatives_5)
	{ after(grammarAccess.getProgramAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__6__Impl
	rule__Program__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getPluggedElementsAssignment_6()); }
	(rule__Program__PluggedElementsAssignment_6)
	{ after(grammarAccess.getProgramAccess().getPluggedElementsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__7__Impl
	rule__Program__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getPluggedElementsAssignment_7()); }
	(rule__Program__PluggedElementsAssignment_7)*
	{ after(grammarAccess.getProgramAccess().getPluggedElementsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__8__Impl
	rule__Program__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getAlternatives_8()); }
	(rule__Program__Alternatives_8)
	{ after(grammarAccess.getProgramAccess().getAlternatives_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__9__Impl
	rule__Program__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getStatesAssignment_9()); }
	(rule__Program__StatesAssignment_9)
	{ after(grammarAccess.getProgramAccess().getStatesAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__10__Impl
	rule__Program__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getStatesAssignment_10()); }
	(rule__Program__StatesAssignment_10)*
	{ after(grammarAccess.getProgramAccess().getStatesAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_11()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PluggedElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluggedElement__Group__0__Impl
	rule__PluggedElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PluggedElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluggedElementAccess().getAlternatives_0()); }
	(rule__PluggedElement__Alternatives_0)
	{ after(grammarAccess.getPluggedElementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluggedElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluggedElement__Group__1__Impl
	rule__PluggedElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PluggedElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluggedElementAccess().getNameAssignment_1()); }
	(rule__PluggedElement__NameAssignment_1)
	{ after(grammarAccess.getPluggedElementAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluggedElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluggedElement__Group__2__Impl
	rule__PluggedElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PluggedElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluggedElementAccess().getOnPinKeyword_2()); }
	('onPin')?
	{ after(grammarAccess.getPluggedElementAccess().getOnPinKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluggedElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PluggedElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PluggedElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPluggedElementAccess().getPinAssignment_3()); }
	(rule__PluggedElement__PinAssignment_3)
	{ after(grammarAccess.getPluggedElementAccess().getPinAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_0()); }
	(rule__State__NameAssignment_0)
	{ after(grammarAccess.getStateAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getActionsAssignment_2()); }
	(rule__State__ActionsAssignment_2)
	{ after(grammarAccess.getStateAccess().getActionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getActionsAssignment_3()); }
	(rule__State__ActionsAssignment_3)*
	{ after(grammarAccess.getStateAccess().getActionsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getTransitionAssignment_4()); }
	(rule__State__TransitionAssignment_4)
	{ after(grammarAccess.getStateAccess().getTransitionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorAction_0()); }
	()
	{ after(grammarAccess.getSensorAccess().getSensorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_1()); }
	'Sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Actuator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__0__Impl
	rule__Actuator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getActuatorAction_0()); }
	()
	{ after(grammarAccess.getActuatorAccess().getActuatorAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Actuator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Actuator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActuatorAccess().getActuatorKeyword_1()); }
	'Actuator'
	{ after(grammarAccess.getActuatorAccess().getActuatorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getActuatorAssignment_0()); }
	(rule__Action__ActuatorAssignment_0)
	{ after(grammarAccess.getActionAccess().getActuatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getAlternatives_1()); }
	(rule__Action__Alternatives_1)
	{ after(grammarAccess.getActionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Action__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionAccess().getValueAssignment_2()); }
	(rule__Action__ValueAssignment_2)
	{ after(grammarAccess.getActionAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getWhenKeyword_0()); }
	('when')?
	{ after(grammarAccess.getTransitionAccess().getWhenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getSensorAssignment_1()); }
	(rule__Transition__SensorAssignment_1)
	{ after(grammarAccess.getTransitionAccess().getSensorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getAlternatives_2()); }
	(rule__Transition__Alternatives_2)
	{ after(grammarAccess.getTransitionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getValueAssignment_3()); }
	(rule__Transition__ValueAssignment_3)
	{ after(grammarAccess.getTransitionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getAlternatives_4()); }
	(rule__Transition__Alternatives_4)
	{ after(grammarAccess.getTransitionAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Transition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransitionAccess().getNextAssignment_5()); }
	(rule__Transition__NextAssignment_5)
	{ after(grammarAccess.getTransitionAccess().getNextAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getProgramAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__InitialStateAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getInitialStateStateCrossReference_3_0()); }
		(
			{ before(grammarAccess.getProgramAccess().getInitialStateStateEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getProgramAccess().getInitialStateStateEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getProgramAccess().getInitialStateStateCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__PluggedElementsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getPluggedElementsPluggedElementParserRuleCall_6_0()); }
		rulePluggedElement
		{ after(grammarAccess.getProgramAccess().getPluggedElementsPluggedElementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__PluggedElementsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getPluggedElementsPluggedElementParserRuleCall_7_0()); }
		rulePluggedElement
		{ after(grammarAccess.getProgramAccess().getPluggedElementsPluggedElementParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__StatesAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getStatesStateParserRuleCall_9_0()); }
		ruleState
		{ after(grammarAccess.getProgramAccess().getStatesStateParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__StatesAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getStatesStateParserRuleCall_10_0()); }
		ruleState
		{ after(grammarAccess.getProgramAccess().getStatesStateParserRuleCall_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluggedElement__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPluggedElementAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getPluggedElementAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PluggedElement__PinAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPluggedElementAccess().getPinEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getPluggedElementAccess().getPinEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getStateAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getActionsActionParserRuleCall_2_0()); }
		ruleAction
		{ after(grammarAccess.getStateAccess().getActionsActionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__ActionsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getActionsActionParserRuleCall_3_0()); }
		ruleAction
		{ after(grammarAccess.getStateAccess().getActionsActionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__TransitionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getTransitionTransitionParserRuleCall_4_0()); }
		ruleTransition
		{ after(grammarAccess.getStateAccess().getTransitionTransitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ActuatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getActuatorActuatorCrossReference_0_0()); }
		(
			{ before(grammarAccess.getActionAccess().getActuatorActuatorEStringParserRuleCall_0_0_1()); }
			ruleEString
			{ after(grammarAccess.getActionAccess().getActuatorActuatorEStringParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getActionAccess().getActuatorActuatorCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getValueSIGNALEnumRuleCall_2_0()); }
		ruleSIGNAL
		{ after(grammarAccess.getActionAccess().getValueSIGNALEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__SensorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getSensorSensorCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getSensorSensorEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getTransitionAccess().getSensorSensorEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getSensorSensorCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getValueSIGNALEnumRuleCall_3_0()); }
		ruleSIGNAL
		{ after(grammarAccess.getTransitionAccess().getValueSIGNALEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__NextAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransitionAccess().getNextStateCrossReference_5_0()); }
		(
			{ before(grammarAccess.getTransitionAccess().getNextStateEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getTransitionAccess().getNextStateEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getTransitionAccess().getNextStateCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
